@model ReflectionIT.Mvc.Paging.PagingList<Note.Model.Notice>
@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflectionIT.Mvc.Paging


<div class="container">
    <nav>
        @await this.Component.InvokeAsync("Pager", new { pagingList = this.Model })
    </nav>
    <table class="table table-striped">
        <thead>
            <tr>
                <th>글 번호</th>
                <th>제목</th>
                <th>작성자</th>
                <th>작성날짜</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var notice in Model)
            {
                <tr>
                    <td>@notice.No</td>
                    <td><a asp-controller="Notice" asp-action="Detail" asp-route-noticeNo="@notice.No">@notice.Title</a></td>
                    <td>@notice.Writer</td>
                    <td>@notice.WriteDate</td>
                    @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin")))
                    {
                        <td>
                            <a asp-controller="Notice" asp-action="Edit" asp-route-noticeNo="@notice.No">Edit</a>
                            <label>|</label>
                            <a asp-controller="Notice" asp-action="Delete" asp-route-noticeNo="@notice.No">Delete</a>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
    <nav>
        <vc:pager paging-list="@Model" />
    </nav>

    @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin") || User.IsInRole("Sub")))
    {
        <div class="pull-right">
            <a class="btn btn-primary" asp-controller="Notice" asp-action="Add">글 쓰기</a>
        </div>
    }
</div>


